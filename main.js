(()=>{"use strict";const t=function(t,e,n){const o=document.createElement(t);return o.textContent=e,void 0===n||0===Object.keys(n).length||(n.id&&function(t,e){t.id=e}(o,n.id),n.class&&function(t,e){"string"==typeof e?t.classList.add(e):e.forEach((e=>{t.classList.add(e)}))}(o,n.class),0!==Object.keys(n.attributes).length&&function(t,e){for(let n in e)t.setAttribute(n,e[n])}(o,n.attributes)),o},e=(document.body,document.querySelector("#content"),t("p","I have some text, cool huh?"));console.log(e)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQ0EsTUFBTUEsRUFzQ0YsU0FBZ0JDLEVBQUtDLEVBQU1DLEdBQ3ZCLE1BQU1DLEVBQU9DLFNBQVNDLGNBQWNMLEdBSXBDLE9BSEFHLEVBQUtHLFlBQWNMLE9BR0hNLElBQVpMLEdBQXlELElBQWhDTSxPQUFPQyxLQUFLUCxHQUFTUSxTQUs5Q1IsRUFBUVMsSUE5Q2hCLFNBQWdCUixFQUFNUSxHQUNsQlIsRUFBS1EsR0FBS0EsRUE4Q05DLENBQU9ULEVBQU1ELEVBQVFTLElBSXJCVCxFQUFRVyxPQTdDaEIsU0FBbUJWLEVBQU1XLEdBQ0UsaUJBQVpBLEVBQ1BYLEVBQUtZLFVBQVVDLElBQUlGLEdBRW5CQSxFQUFRRyxTQUFRQyxJQUNaZixFQUFLWSxVQUFVQyxJQUFJRSxNQXlDdkJDLENBQVVoQixFQUFNRCxFQUFRVyxPQUltQixJQUEzQ0wsT0FBT0MsS0FBS1AsRUFBUWtCLFlBQVlWLFFBdEN4QyxTQUF1QlAsRUFBTWlCLEdBQ3pCLElBQUssSUFBSUMsS0FBT0QsRUFDWmpCLEVBQUttQixhQUFhRCxFQUFLRCxFQUFXQyxJQXFDbENFLENBQWNwQixFQUFNRCxFQUFRa0IsYUFmckJqQixHQzNDYnFCLEdEd0ZJcEIsU0FBU3FCLEtBQ05yQixTQUFTc0IsY0FBYyxZQ3pGMUIzQixFQUFlLElBQUssZ0NBSTlCNEIsUUFBUUMsSUFBSUosSSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQtcGFnZS8uL3NyYy91dGlsLmpzIiwid2VicGFjazovL3Jlc3RhdXJhbnQtcGFnZS8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBkb21VdGlsIG1vZHVsZSAtIGNvbnRhaW5zIGZ1bmN0aW9ucyB0byBzaW1wbGlmeSBET00gbm9kZSBtYW5pcHVsYXRpb24gYW5kIGNyZWF0aW9uXG5jb25zdCBkb21VdGlsID0gKGZ1bmN0aW9uKCkge1xuICAgIC8vIF9hZGRJZCBmdW5jdGlvbiAtIGFkZHMgaWQgdG8gYSBzcGVjaWZpZWQgZWxlbWVudFxuICAgIGZ1bmN0aW9uIF9hZGRJZChlbGVtLCBpZCkge1xuICAgICAgICBlbGVtLmlkID0gaWQ7XG4gICAgICAgIHJldHVybiBlbGVtO1xuICAgIH1cbiAgICBcbiAgICAvLyBfYWRkQ2xhc3MgLSBhZGRzIHNwZWNpZmllZCBjbGFzc2VzIHRvIGFuIGVsZW1lbnRcbiAgICBmdW5jdGlvbiBfYWRkQ2xhc3MoZWxlbSwgY2xhc3Nlcykge1xuICAgICAgICBpZiAodHlwZW9mIGNsYXNzZXMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBlbGVtLmNsYXNzTGlzdC5hZGQoY2xhc3Nlcyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjbGFzc2VzLmZvckVhY2goY2xhc3NOYW1lID0+IHtcbiAgICAgICAgICAgICAgICBlbGVtLmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBlbGVtO1xuICAgIH1cblxuICAgIC8vIF9hZGRBdHRyaWJ1dGUgLSBhZGRzIHNwZWNpZmllZCBhdHRyaWJ1dGVzIHRvIGFuIGVsZW1lbnRcbiAgICBmdW5jdGlvbiBfYWRkQXR0cmlidXRlKGVsZW0sIGF0dHJpYnV0ZXMpIHtcbiAgICAgICAgZm9yIChsZXQga2V5IGluIGF0dHJpYnV0ZXMpIHtcbiAgICAgICAgICAgIGVsZW0uc2V0QXR0cmlidXRlKGtleSwgYXR0cmlidXRlc1trZXldKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZWxlbTtcbiAgICB9XG4gICAgXG4gICAgLyogY3JlYXRlIG1ldGhvZCAtIGNyZWF0ZXMgYW4gZWxlbWVudCB3aXRoIHNwZWNpZmllZCB0YWcsIGdpdmVuIHRleHQsIGFuZCBzdXBwbGllZCBvcHRpb25zXG4gICAgb3B0aW9ucyBwYXJlbXRlciBpcyBvZiB0aGUgZm9ybTogXG4gICAge1xuICAgICAgICBpZDogU3RyaW5nLFxuICAgICAgICBjbGFzczogU3RyaW5nIHwgW1N0cmluZ11cbiAgICAgICAgYXR0cmlidXRlczoge1xuICAgICAgICAgICAgYXR0cmlidXRlMTogU3RyaW5nLFxuICAgICAgICAgICAgYXR0cmlidXRlMjogU3RyaW5nXG4gICAgICAgIH1cbiAgICB9XG4gICAgKi9cbiAgICBmdW5jdGlvbiBjcmVhdGUodGFnLCB0ZXh0LCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IGVsZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHRhZyk7XG4gICAgICAgIGVsZW0udGV4dENvbnRlbnQgPSB0ZXh0O1xuXG4gICAgICAgIC8vIHJldHVybiB0aGUgZWxlbWVudCBpZiBubyBvcHRpb25zIHdlcmUgc3BlY2lmaWVkXG4gICAgICAgIGlmIChvcHRpb25zID09PSB1bmRlZmluZWQgfHwgT2JqZWN0LmtleXMob3B0aW9ucykubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gZWxlbTtcbiAgICAgICAgfSBcbiAgICAgICAgXG4gICAgICAgIC8vIEFkZCBzcGVjaWZpZWQgaWRcbiAgICAgICAgaWYgKG9wdGlvbnMuaWQpIHtcbiAgICAgICAgICAgIF9hZGRJZChlbGVtLCBvcHRpb25zLmlkKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEFkZCBzcGVjaWZpZWQgY2xhc3NcbiAgICAgICAgaWYgKG9wdGlvbnMuY2xhc3MpIHtcbiAgICAgICAgICAgIF9hZGRDbGFzcyhlbGVtLCBvcHRpb25zLmNsYXNzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEFkZCBzcGVjaWZpZWQgYXR0cmlidXRlc1xuICAgICAgICBpZiAoT2JqZWN0LmtleXMob3B0aW9ucy5hdHRyaWJ1dGVzKS5sZW5ndGggIT09IDApIHtcbiAgICAgICAgICAgIF9hZGRBdHRyaWJ1dGUoZWxlbSwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBlbGVtO1xuICAgIH1cblxuICAgIC8vIGFwcGVuZENoaWxkcmVuIG1ldGhvZCAtIGFwcGVuZHMgYW4gYXJyYXkgb2YgY2hpbGRyZW4gdG8gdGhlIHBhcmVudCBub2RlIGluIHRoZSBwcm92aWRlZCBvcmRlclxuICAgIGZ1bmN0aW9uIGFwcGVuZENoaWxkcmVuKHBhcmVudCwgY2hpbGRyZW4pIHtcbiAgICAgICAgY2hpbGRyZW4uZm9yRWFjaChjaGlsZCA9PiB7XG4gICAgICAgICAgICBwYXJlbnQuYXBwZW5kQ2hpbGQoY2hpbGQpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHBhcmVudDtcbiAgICB9XG5cbiAgICAvLyByZW1vdmVDb250ZW50IG1ldGhvZCAtIGVtcHRpZXMgdGhlIGNvbnRlbnQgb2YgdGhlIHByb3ZpZGVkIGVsZW1lbnRcbiAgICBmdW5jdGlvbiByZW1vdmVDb250ZW50KGVsZW0pIHtcbiAgICAgICAgZWxlbS50ZXh0Q29udGVudCA9ICcnO1xuICAgICAgICByZXR1cm4gZWxlbTtcbiAgICB9XG5cbiAgICAvLyBDbGVhciBcbiAgICByZXR1cm4ge1xuICAgICAgICBjcmVhdGUsXG4gICAgICAgIGFwcGVuZENoaWxkcmVuLFxuICAgICAgICByZW1vdmVDb250ZW50XG4gICAgfTtcbn0pKCk7XG5cbi8vIGRvbUNhY2hlIC0gY29udGFpbnMgY29tbW9ubHkgdXNlZCBET00gbm9kZXMgdG8gcmVkdWNlIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IgY2FsbHNcbmNvbnN0IGRvbUNhY2hlID0ge1xuICAgIGJvZHk6IGRvY3VtZW50LmJvZHksXG4gICAgY29udGVudDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2NvbnRlbnQnKSxcbn07XG5cbmV4cG9ydCB7IGRvbVV0aWwsIGRvbUNhY2hlIH07IiwiaW1wb3J0IHsgZG9tVXRpbCwgZG9tQ2FjaGUgfSBmcm9tICcuL3V0aWwuanMnO1xuXG5jb25zdCBwID0gZG9tVXRpbC5jcmVhdGUoJ3AnLCAnSSBoYXZlIHNvbWUgdGV4dCwgY29vbCBodWg/Jyk7XG5cbmNvbnN0IGJvZHkgPSBkb21DYWNoZS5ib2R5O1xuXG5jb25zb2xlLmxvZyhwKTsiXSwibmFtZXMiOlsiZG9tVXRpbCIsInRhZyIsInRleHQiLCJvcHRpb25zIiwiZWxlbSIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInRleHRDb250ZW50IiwidW5kZWZpbmVkIiwiT2JqZWN0Iiwia2V5cyIsImxlbmd0aCIsImlkIiwiX2FkZElkIiwiY2xhc3MiLCJjbGFzc2VzIiwiY2xhc3NMaXN0IiwiYWRkIiwiZm9yRWFjaCIsImNsYXNzTmFtZSIsIl9hZGRDbGFzcyIsImF0dHJpYnV0ZXMiLCJrZXkiLCJzZXRBdHRyaWJ1dGUiLCJfYWRkQXR0cmlidXRlIiwicCIsImJvZHkiLCJxdWVyeVNlbGVjdG9yIiwiY29uc29sZSIsImxvZyJdLCJzb3VyY2VSb290IjoiIn0=